---
layout: post
title:  "Covering Index"
date:   2020-12-25 23:42:12 +0900
categories: 개발
---
# Index 를 설계할 때
초개가 회사에서 처음 일을 시작할 때 가장 어려워했던것, 가장 많이 지적받았던 부분 그리고 지금도 어려워하고 있는 부분이 바로 인덱스를 만드는것이다.

인덱스는 만들면 해당 인덱스가 적용된 컬럼 정보와 주소등을 가진 인덱스 파일이 생긴다.

엄청나게 많은 데이터베이스의 로우를 내가 원하는 조건에 맞춰 다 훑어볼 수는 없는것 아닌가 (Full Scan ㅇㅅㅇ...)

그래서 인덱스 파일에서 내가 원하는 범위를 쉽게 찾을 수 있게 도와준다. (Range Scan)

요것이 어떻게 저장되어있냐?

B-Tree 라는 트리를 사용해서 저장된다. B-Tree 는 맨 끝에 리프노드를 가지고 있고 각 리프노트의 depth 는 동일하다.

항상 정렬되어있기 때문에 오름차순 또는 내림차순으로 찾으면 된다.

대충 어떤 특징이 있는가?

* insert, update, delete 문에서 성능이 떨어지고 select 절에서 효력을 발휘한다.

당근 새로운 레코드가 생기면 인덱스 파일도 수정해야되니까...

검색이 많은곳에서 진정한 힘을 발휘한다.

* 분포도가 고른 컬럼에 인덱스를 써야 좋다.

남자/여자 라던가 예/아니오 등 해당 컬럼에 쓸 수 있는 값의 종류가 별로 많지 않은 곳은 좋지 않다.

* 다중컬럼 인덱스를 잘 쓰면 좋다

단일 인덱스를 여러개 만들바에는 다중컬럼 인덱스로 포함시키는게 낫다.


# Covering Index

그럼 인덱스를 어떤식으로 설계하면 좋을까?

초개는 dbi 도 아니고 잘은 모르지민 커버링 인덱스를 쓰면 위 고민을 조금이나마 해결 가능한것 같다.

커버링 인덱스






 



